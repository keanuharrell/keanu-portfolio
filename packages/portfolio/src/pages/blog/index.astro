---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';
import '../../styles/global-modern.css';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${SITE_TITLE} - Blog`} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<!-- Background layers -->
		<div class="bg-layer bg-gradient"></div>
		<div class="bg-layer floating-shapes">
			<div class="shape shape-1"></div>
			<div class="shape shape-2"></div>
			<div class="shape shape-3"></div>
		</div>

		<!-- Navigation back to home -->
		<nav class="blog-nav">
			<a href="/" class="back-home">
				<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
					<path d="M19 12H5M12 19l-7-7 7-7"/>
				</svg>
				<span>Back to Portfolio</span>
			</a>
		</nav>

		<div class="container">
			<main class="blog-main">
				<header class="blog-header">
					<h1 class="blog-title">Thoughts & Stories</h1>
					<p class="blog-description">
						Real stories from the intersection of emergency response and software engineering.
						Lessons learned from scaling systems, leading teams, and building products that matter.
					</p>
				</header>

				<section class="blog-posts">
					{posts.length > 0 ? (
						<div class="posts-grid">
							{posts.map((post, index) => (
								<article class="post-card">
									<a href={`/blog/${post.id}/`} class="post-link">
										{post.data.heroImage && (
											<div class="post-image">
												<Image width={400} height={200} src={post.data.heroImage} alt="" />
											</div>
										)}
										<div class="post-content">
											<div class="post-meta">
												<FormattedDate date={post.data.pubDate} />
											</div>
											<h3 class="post-title">{post.data.title}</h3>
											{post.data.description && (
												<p class="post-description">{post.data.description}</p>
											)}
											<span class="read-more">Read more →</span>
										</div>
									</a>
								</article>
							))}
						</div>
					) : (
						<div class="no-posts">
							<div class="coming-soon">
								<h3>Coming Soon</h3>
								<p>The first stories are being written. Check back soon for insights from the world of emergency response meets software engineering.</p>
							</div>
						</div>
					)}
				</section>
			</main>
		</div>
	</body>
</html>

<style>
	/* Container global avec padding */
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
		position: relative;
		z-index: 10;
	}

	/* Navigation */
	.blog-nav {
		position: fixed;
		top: 2rem;
		left: 2rem;
		z-index: 100;
	}

	.back-home {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.8rem 1.5rem;
		background: rgba(255, 255, 255, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.2);
		border-radius: 50px;
		color: white;
		text-decoration: none;
		transition: all 0.3s ease;
		backdrop-filter: blur(10px);
	}

	.back-home:hover {
		background: rgba(255, 107, 53, 0.2);
		border-color: #ff6b35;
	}

	/* Main blog */
	.blog-main {
		padding: 8rem 0 4rem;
		min-height: 100vh;
	}

	/* Header centré */
	.blog-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.blog-title {
		font-size: clamp(2.5rem, 5vw, 4rem);
		color: #ffffff;
		margin-bottom: 1.5rem;
		font-weight: 700;
	}

	.blog-description {
		font-size: 1.1rem;
		color: rgba(255, 255, 255, 0.8);
		max-width: 600px;
		margin: 0 auto;
		line-height: 1.6;
	}

	/* Grid des posts */
	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
		margin-top: 2rem;
	}

	/* Cartes des posts */
	.post-card {
		background: rgba(255, 255, 255, 0.05);
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 12px;
		overflow: hidden;
		transition: all 0.3s ease;
	}

	.post-card:hover {
		transform: translateY(-5px);
		border-color: rgba(255, 107, 53, 0.3);
		box-shadow: 0 10px 30px rgba(255, 107, 53, 0.1);
	}

	.post-link {
		display: block;
		text-decoration: none;
		color: inherit;
	}

	.post-image {
		aspect-ratio: 16/9;
		overflow: hidden;
	}

	.post-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}

	.post-card:hover .post-image img {
		transform: scale(1.02);
	}

	/* Contenu des cartes */
	.post-content {
		padding: 1.5rem;
	}

	.post-meta {
		font-size: 0.85rem;
		color: #ff6b35;
		margin-bottom: 0.5rem;
		font-weight: 500;
	}

	.post-title {
		font-size: 1.25rem;
		color: #ffffff;
		margin-bottom: 0.75rem;
		line-height: 1.4;
		font-weight: 600;
	}

	.post-description {
		color: rgba(255, 255, 255, 0.7);
		line-height: 1.5;
		margin-bottom: 1rem;
		font-size: 0.95rem;
	}

	.read-more {
		color: #ff6b35;
		font-size: 0.9rem;
		font-weight: 500;
	}

	/* État sans posts */
	.no-posts {
		text-align: center;
		padding: 4rem 0;
	}

	.coming-soon {
		background: rgba(255, 255, 255, 0.05);
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 12px;
		padding: 2rem;
		max-width: 500px;
		margin: 0 auto;
	}

	.coming-soon h3 {
		color: #ff6b35;
		font-size: 1.5rem;
		margin-bottom: 1rem;
	}

	.coming-soon p {
		color: rgba(255, 255, 255, 0.8);
		line-height: 1.6;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.container {
			padding: 0 1rem;
		}

		.blog-nav {
			top: 1rem;
			left: 1rem;
		}

		.blog-main {
			padding: 6rem 0 2rem;
		}

		.posts-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.post-content {
			padding: 1.25rem;
		}
	}
</style>
